.TH "Path" 3 "Mon Apr 5 2021" "Extraterrestrial" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Path
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Pathfinder\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPath\fP (std::vector< \fBPVector\fP > \fBpoints\fP, double _r)"
.br
.ti -1c
.RI "\fBPVector\fP \fBgetClosestNormalPoint\fP (\fBPVector\fP p, double d)"
.br
.ti -1c
.RI "bool \fBisOnPath\fP (\fBPVector\fP p)"
.br
.RI "Checks whether a point is inside the radius of the path\&. "
.ti -1c
.RI "void \fBaddPoint\fP (\fBPVector\fP p)"
.br
.RI "Adds a point to the \fBPath\fP\&. "
.ti -1c
.RI "void \fBremoveLast\fP ()"
.br
.RI "Removes the last point of the path\&. "
.ti -1c
.RI "\fBPVector\fP \fBgetLast\fP ()"
.br
.RI "Returns the last point of the path\&. "
.ti -1c
.RI "bool \fBisEmpty\fP () const"
.br
.RI "Checks whether the \fBPath\fP is empty\&. "
.ti -1c
.RI "unsigned int \fBsize\fP () const"
.br
.RI "Returns the size of the \fBPath\fP vector\&. "
.ti -1c
.RI "double \fBlength\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBPVector\fP > \fBpoints\fP"
.br
.RI "Contains all points of the path in order so that p[0] -> p[1] -> p[2] represents the path\&. "
.ti -1c
.RI "double \fBr\fP"
.br
.RI "The radius of the \fBPath\fP\&. "
.in -1c
.SH "Detailed Description"
.PP 
A container class for a path generated by the \fBPathfinder\fP class
.PP
\fBTemplate Parameters\fP
.RS 4
\fIpoints\fP \fBPVector\fP vector containing all points in the path 
.br
\fIr\fP the radius of the path 
.RE
.PP

.SH "Constructor & Destructor Documentation"
.PP 
.SS "Path::Path (std::vector< \fBPVector\fP > points, double _r)"

.PP
 \fBPath\fP 
.br
 
.PP
 
.SH "Member Function Documentation"
.PP 
.SS "void Path::addPoint (\fBPVector\fP p)"

.PP
Adds a point to the \fBPath\fP\&. 
.SS "\fBPVector\fP Path::getClosestNormalPoint (\fBPVector\fP p, double d)"
Calculates the closest normal point to a point that is extended by the factor d
.PP
\fBParameters\fP
.RS 4
\fIp\fP a point the normal should be calculated to 
.br
\fId\fP the amount by which the point should lie ahead on the path\&.
.RE
.PP
This method calculates a point that lies on the path or an extension of one of it's lines\&. This point is moved by the factor d on the path\&. (If d = 0 than the point is just a normal point to p) 
.SS "\fBPVector\fP Path::getLast ()"

.PP
Returns the last point of the path\&. 
.SS "bool Path::isEmpty () const\fC [inline]\fP"

.PP
Checks whether the \fBPath\fP is empty\&. 
.SS "bool Path::isOnPath (\fBPVector\fP p)"

.PP
Checks whether a point is inside the radius of the path\&. 
.SS "double Path::length ()"

.SS "void Path::removeLast ()"

.PP
Removes the last point of the path\&. 
.SS "unsigned int Path::size () const\fC [inline]\fP"

.PP
Returns the size of the \fBPath\fP vector\&. 
.SH "Member Data Documentation"
.PP 
.SS "std::vector<\fBPVector\fP> Path::points"

.PP
Contains all points of the path in order so that p[0] -> p[1] -> p[2] represents the path\&. 
.SS "double Path::r"

.PP
The radius of the \fBPath\fP\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Extraterrestrial from the source code\&.
