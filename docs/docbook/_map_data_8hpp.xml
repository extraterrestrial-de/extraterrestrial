<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="__map_data_8hpp" xml:lang="en-US">
<title>code/MapData.hpp File Reference</title>
<indexterm><primary>code/MapData.hpp</primary></indexterm>
<programlisting>#include &quot;libs/PPSettings.hpp&quot;
#include &quot;libs/CommonFunctions.hpp&quot;
#include &quot;libs/PVector.hpp&quot;
#include &lt;vector&gt;
#include &lt;iostream&gt;
#include &lt;array&gt;
#include &lt;cmath&gt;
#include &lt;algorithm&gt;
</programlisting>Include dependency graph for MapData.hpp:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_map_data_8hpp__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="_map_data_8hpp__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>class <link linkend="_class_collectible">Collectible</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_line">Line</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_area">Area</link></para>
</listitem>
            <listitem><para>class <link linkend="_class_field">Field</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Namespaces    </title>
        <itemizedlist>
            <listitem><para> <link linkend="_namespacegeometry">geometry</link></para>

<para>namespace for geometric functions </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>bool <link linkend="_namespacegeometry_1af87847d485624e5c7ab2bb1558c3a36f">geometry::isLeft</link> (<link linkend="_class_p_vector">PVector</link> p0, <link linkend="_class_p_vector">PVector</link> p1, <link linkend="_class_p_vector">PVector</link> p2)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespacegeometry_1aebf0ad8e6b1a14089df1845e5173a811">geometry::isInside</link> (const <link linkend="_class_p_vector">PVector</link> &amp;p, <link linkend="_class_area">Area</link> &amp;area)</para>
</listitem>
            <listitem><para><link linkend="_class_p_vector">PVector</link> <link linkend="_namespacegeometry_1a228137d265482ee3fd6581e2e375eb8f">geometry::intersection</link> (<link linkend="_class_line">Line</link> &amp;l1, <link linkend="_class_line">Line</link> &amp;l2)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespacegeometry_1ab3ebb42fdbd44fb848c370a0b4261e18">geometry::isIntersecting</link> (<link linkend="_class_line">Line</link> &amp;l1, <link linkend="_class_line">Line</link> &amp;l2)</para>
</listitem>
            <listitem><para>bool <link linkend="_namespacegeometry_1a8a64aa44149d5f68a5ac14cb3f435708">geometry::isIntersecting</link> (<link linkend="_class_line">Line</link> l1, const std::vector&lt; <link linkend="_class_area">Area</link> &gt; &amp;Obstacles)</para>
</listitem>
            <listitem><para>double <link linkend="_namespacegeometry_1a478ae992edb02bc432e6d0420c40e336">geometry::sqDist</link> (const <link linkend="_class_p_vector">PVector</link> &amp;p1, const <link linkend="_class_p_vector">PVector</link> &amp;p2)</para>
</listitem>
            <listitem><para>double <link linkend="_namespacegeometry_1a9a1ebcb6a74b046020dcc91c40554a3a">geometry::dist</link> (const <link linkend="_class_p_vector">PVector</link> &amp;p1, const <link linkend="_class_p_vector">PVector</link> &amp;p2)</para>
</listitem>
            <listitem><para>double <link linkend="_namespacegeometry_1a2710bf6fad3b638a4ee95abcd843d90f">geometry::dot</link> (<link linkend="_class_p_vector">PVector</link> p1, <link linkend="_class_p_vector">PVector</link> p2)</para>
</listitem>
            <listitem><para><link linkend="_class_p_vector">PVector</link> <link linkend="_namespacegeometry_1a120ad790ee5a9ef199a6d67e5e9f1c90">geometry::getNormalPoint</link> (<link linkend="_class_line">Line</link> line, <link linkend="_class_p_vector">PVector</link> point)</para>
</listitem>
            <listitem><para><link linkend="_class_p_vector">PVector</link> <link linkend="_namespacegeometry_1a46dee6450badd387e6788a9ebf80fa44">geometry::angle2Vector</link> (double a)</para>
</listitem>
            <listitem><para>double <link linkend="_namespacegeometry_1a0ce1748996f9e029a3cbeb665c1d17ce">geometry::vector2Angle</link> (<link linkend="_class_p_vector">PVector</link> v)</para>
</listitem>
            <listitem><para>double <link linkend="_namespacegeometry_1ab9437f91a11b422552cd37d014c43651">geometry::vector2Angle</link> (double x, double y)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>const std::vector&lt; <link linkend="_class_area">Area</link> &gt; <link linkend="__map_data_8hpp_1a5d8d0e0787571afd3a5b4565345b0e76">GAME0WALLS</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_area">Area</link> &gt; <link linkend="__map_data_8hpp_1a6a3dbad1ccea8b9cbdca542ce8871b77">GAME0TRAPS</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_area">Area</link> &gt; <link linkend="__map_data_8hpp_1a1b9e280f4bd2c5ea162d7d7246878442">GAME0SWAMPS</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_area">Area</link> &gt; <link linkend="__map_data_8hpp_1a6f4c22271cea6cce46e9b0616baed0ba">GAME0WATERS</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; <link linkend="__map_data_8hpp_1a2c5cc712edfb703447cb265cdad14234">GAME0DEPOSITS</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; <link linkend="__map_data_8hpp_1ab2c39018be1e4bec6bfb42d1402dab51">GAME0WALLNODES</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; <link linkend="__map_data_8hpp_1a7169e2bfe4b9d6e7ae57826f542451cf">GAME0TRAPNODES</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; <link linkend="__map_data_8hpp_1a56a8bac10660092139722cc14df2b330">GAME0SWAMPNODES</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_collectible">Collectible</link> &gt; <link linkend="__map_data_8hpp_1a105100c9ca31bdcc7c0f2e93142a5347">GAME0COLLECTIBLES</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_area">Area</link> &gt; <link linkend="__map_data_8hpp_1a6543ba543a4879004aeeab9f65b9c79d">GAME1WALLS</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_area">Area</link> &gt; <link linkend="__map_data_8hpp_1ad1b90b6a79493cda3d491c4af38e4611">GAME1TRAPS</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_area">Area</link> &gt; <link linkend="__map_data_8hpp_1ae2f59fba0917213b2b5ed5be14065108">GAME1SWAMPS</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_area">Area</link> &gt; <link linkend="__map_data_8hpp_1a89322b6b39784781f3ef34b2c6442dd1">GAME1WATERS</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; <link linkend="__map_data_8hpp_1a858dcfbef08a4532d85e54c6f6ee0d79">GAME1DEPOSITS</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; <link linkend="__map_data_8hpp_1a80292519a7785cb8b0f36c78942077a8">GAME1WALLNODES</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; <link linkend="__map_data_8hpp_1aba3b95231805b4634b1bb3f701f1b4ce">GAME1TRAPNODES</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; <link linkend="__map_data_8hpp_1a78ca48d700499994f263167950d526a7">GAME1SWAMPNODES</link></para>
</listitem>
            <listitem><para>const std::vector&lt; <link linkend="_class_collectible">Collectible</link> &gt; <link linkend="__map_data_8hpp_1a4508f5e07fb31ba5a1d5865b9a43de36">GAME1COLLECTIBLES</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Variable Documentation</title>
<anchor xml:id="__map_data_8hpp_1a105100c9ca31bdcc7c0f2e93142a5347"/>    <section>
    <title>GAME0COLLECTIBLES</title>
<indexterm><primary>GAME0COLLECTIBLES</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME0COLLECTIBLES</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_collectible">Collectible</link>&gt; GAME0COLLECTIBLES<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a2c5cc712edfb703447cb265cdad14234"/>    <section>
    <title>GAME0DEPOSITS</title>
<indexterm><primary>GAME0DEPOSITS</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME0DEPOSITS</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_p_vector">PVector</link>&gt; GAME0DEPOSITS<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a56a8bac10660092139722cc14df2b330"/>    <section>
    <title>GAME0SWAMPNODES</title>
<indexterm><primary>GAME0SWAMPNODES</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME0SWAMPNODES</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_p_vector">PVector</link>&gt; GAME0SWAMPNODES<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a1b9e280f4bd2c5ea162d7d7246878442"/>    <section>
    <title>GAME0SWAMPS</title>
<indexterm><primary>GAME0SWAMPS</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME0SWAMPS</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_area">Area</link>&gt; GAME0SWAMPS<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a7169e2bfe4b9d6e7ae57826f542451cf"/>    <section>
    <title>GAME0TRAPNODES</title>
<indexterm><primary>GAME0TRAPNODES</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME0TRAPNODES</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_p_vector">PVector</link>&gt; GAME0TRAPNODES<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a6a3dbad1ccea8b9cbdca542ce8871b77"/>    <section>
    <title>GAME0TRAPS</title>
<indexterm><primary>GAME0TRAPS</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME0TRAPS</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_area">Area</link>&gt; GAME0TRAPS<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1ab2c39018be1e4bec6bfb42d1402dab51"/>    <section>
    <title>GAME0WALLNODES</title>
<indexterm><primary>GAME0WALLNODES</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME0WALLNODES</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_p_vector">PVector</link>&gt; GAME0WALLNODES<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a5d8d0e0787571afd3a5b4565345b0e76"/>    <section>
    <title>GAME0WALLS</title>
<indexterm><primary>GAME0WALLS</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME0WALLS</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_area">Area</link>&gt; GAME0WALLS<computeroutput>[extern]</computeroutput></computeroutput></para>
<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 | | |.&#8212;.-..--&#8212;.| \ .&#8212;.-.| |_ .&#8212;.-. | || _ || _ || &#8211; || _ || _|| _ | |__|_|__||___._|| __||_____/ |___._||____||___._| |__| </para>
    </section><anchor xml:id="__map_data_8hpp_1a6f4c22271cea6cce46e9b0616baed0ba"/>    <section>
    <title>GAME0WATERS</title>
<indexterm><primary>GAME0WATERS</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME0WATERS</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_area">Area</link>&gt; GAME0WATERS<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a4508f5e07fb31ba5a1d5865b9a43de36"/>    <section>
    <title>GAME1COLLECTIBLES</title>
<indexterm><primary>GAME1COLLECTIBLES</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME1COLLECTIBLES</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_collectible">Collectible</link>&gt; GAME1COLLECTIBLES<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a858dcfbef08a4532d85e54c6f6ee0d79"/>    <section>
    <title>GAME1DEPOSITS</title>
<indexterm><primary>GAME1DEPOSITS</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME1DEPOSITS</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_p_vector">PVector</link>&gt; GAME1DEPOSITS<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a78ca48d700499994f263167950d526a7"/>    <section>
    <title>GAME1SWAMPNODES</title>
<indexterm><primary>GAME1SWAMPNODES</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME1SWAMPNODES</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_p_vector">PVector</link>&gt; GAME1SWAMPNODES<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1ae2f59fba0917213b2b5ed5be14065108"/>    <section>
    <title>GAME1SWAMPS</title>
<indexterm><primary>GAME1SWAMPS</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME1SWAMPS</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_area">Area</link>&gt; GAME1SWAMPS<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1aba3b95231805b4634b1bb3f701f1b4ce"/>    <section>
    <title>GAME1TRAPNODES</title>
<indexterm><primary>GAME1TRAPNODES</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME1TRAPNODES</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_p_vector">PVector</link>&gt; GAME1TRAPNODES<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1ad1b90b6a79493cda3d491c4af38e4611"/>    <section>
    <title>GAME1TRAPS</title>
<indexterm><primary>GAME1TRAPS</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME1TRAPS</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_area">Area</link>&gt; GAME1TRAPS<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a80292519a7785cb8b0f36c78942077a8"/>    <section>
    <title>GAME1WALLNODES</title>
<indexterm><primary>GAME1WALLNODES</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME1WALLNODES</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_p_vector">PVector</link>&gt; GAME1WALLNODES<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a6543ba543a4879004aeeab9f65b9c79d"/>    <section>
    <title>GAME1WALLS</title>
<indexterm><primary>GAME1WALLS</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME1WALLS</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_area">Area</link>&gt; GAME1WALLS<computeroutput>[extern]</computeroutput></computeroutput></para>    </section><anchor xml:id="__map_data_8hpp_1a89322b6b39784781f3ef34b2c6442dd1"/>    <section>
    <title>GAME1WATERS</title>
<indexterm><primary>GAME1WATERS</primary><secondary>MapData.hpp</secondary></indexterm>
<indexterm><primary>MapData.hpp</primary><secondary>GAME1WATERS</secondary></indexterm>
<para><computeroutput>const std::vector&lt;<link linkend="_class_area">Area</link>&gt; GAME1WATERS<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
