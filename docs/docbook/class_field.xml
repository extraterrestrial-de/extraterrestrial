<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xml:id="_class_field" xml:lang="en-US">
<title>Field Class Reference</title>
<indexterm><primary>Field</primary></indexterm>
<para>
<computeroutput>#include &lt;MapData.hpp&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_field_1a67b9e78358f9db7499bfdd5ef2871101">Field</link> (const int &amp;width, const int &amp;height, const std::vector&lt; <link linkend="_class_area">Area</link> &gt; &amp;walls, const std::vector&lt; <link linkend="_class_area">Area</link> &gt; &amp;traps, const std::vector&lt; <link linkend="_class_area">Area</link> &gt; &amp;swamps, const std::vector&lt; <link linkend="_class_area">Area</link> &gt; &amp;waters, const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; &amp;deposits, const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; &amp;wallNodes, const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; &amp;trapNodes, const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; &amp;swampNodes, const std::vector&lt; <link linkend="_class_collectible">Collectible</link> &gt; &amp;collectibles)</para>
</listitem>
            <listitem><para><link linkend="_class_collectible">Collectible</link> * <link linkend="_class_field_1a25e4d60285038520a8420f92570ebd9a">addCollectible</link> (<link linkend="_class_collectible">Collectible</link> collectible)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_field_1aaf3139f53330d51b04a58d308b3d449f">removeCollectible</link> (<link linkend="_class_collectible">Collectible</link> collectible)</para>
</listitem>
            <listitem><para><link linkend="_class_collectible">Collectible</link> * <link linkend="_class_field_1adc55f248e3fbe13202b7e1bb13537588">getCollectible</link> (<link linkend="_class_p_vector">PVector</link> pos, double angle, double uncertainty, int color)</para>
</listitem>
            <listitem><para><link linkend="_class_p_vector">PVector</link> <link linkend="_class_field_1ac2f890f8e4263dbfd327922065ba0306">getSize</link> ()</para>

<para>Getter for the size. </para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_area">Area</link> &gt; <link linkend="_class_field_1a514b0362f97a072d15cc8b93e53bf529">getMapObjects</link> (const std::vector&lt; unsigned int &gt; &amp;indices)</para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; <link linkend="_class_field_1a5bcbf3fdf8db5ef596be0a15efdc3892">getMapNodes</link> (const std::vector&lt; unsigned int &gt; &amp;indices)</para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; <link linkend="_class_field_1a2e1fc59842bf2d0adc078a79f30efe17">getDeposits</link> ()</para>

<para>Getter method for deposits. </para>
</listitem>
            <listitem><para>std::vector&lt; <link linkend="_class_collectible">Collectible</link> &gt; <link linkend="_class_field_1ac726f4dc045fd47ad2de745fe2f898dd">getCollectibles</link> (const std::vector&lt; unsigned int &gt; &amp;colors)</para>

<para>Getter method for collectibles. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Contains all important map data about the map</para>

<para>It contains all information given by the map_interpreter.py script. This information is enough to fully reconstruct the map from one field-object</para>

<para>
                <formalpara>
                    <title>
Template Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>width</entry>
                                <entry>
<para>width of the map </para>
</entry>
                            </row>
                            <row>
                                <entry>height</entry>
                                <entry>
<para>height of the map </para>
</entry>
                            </row>
                            <row>
                                <entry>walls</entry>
                                <entry>
<para>All walls </para>
</entry>
                            </row>
                            <row>
                                <entry>traps</entry>
                                <entry>
<para>All traps </para>
</entry>
                            </row>
                            <row>
                                <entry>swamps</entry>
                                <entry>
<para>All swamps </para>
</entry>
                            </row>
                            <row>
                                <entry>waters</entry>
                                <entry>
<para>All waters/bonus areas </para>
</entry>
                            </row>
                            <row>
                                <entry>deposits</entry>
                                <entry>
<para>All deposits </para>
</entry>
                            </row>
                            <row>
                                <entry>collectibles</entry>
                                <entry>
<para>All collectibles</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                TODO: show function for <link linkend="_class_field">Field</link> class. (for Debugging) </para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_field_1a67b9e78358f9db7499bfdd5ef2871101"/>    <section>
    <title>Field()</title>
<indexterm><primary>Field</primary><secondary>Field</secondary></indexterm>
<indexterm><primary>Field</primary><secondary>Field</secondary></indexterm>
<para><computeroutput>Field::Field (const int &amp; width, const int &amp; height, const std::vector&lt; <link linkend="_class_area">Area</link> &gt; &amp; walls, const std::vector&lt; <link linkend="_class_area">Area</link> &gt; &amp; traps, const std::vector&lt; <link linkend="_class_area">Area</link> &gt; &amp; swamps, const std::vector&lt; <link linkend="_class_area">Area</link> &gt; &amp; waters, const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; &amp; deposits, const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; &amp; wallNodes, const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; &amp; trapNodes, const std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; &amp; swampNodes, const std::vector&lt; <link linkend="_class_collectible">Collectible</link> &gt; &amp; collectibles)</computeroutput></para>
<para><informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 MapData 
<literallayout>&#160;&#xa;</literallayout>
 <informaltable frame='bottom'><tgroup cols='1'><colspec align='center'/><tbody><row><entry align='center'>
</entry></row></tbody></tgroup></informaltable>
 </para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_field_1a25e4d60285038520a8420f92570ebd9a"/>    <section>
    <title>addCollectible()</title>
<indexterm><primary>addCollectible</primary><secondary>Field</secondary></indexterm>
<indexterm><primary>Field</primary><secondary>addCollectible</secondary></indexterm>
<para><computeroutput><link linkend="_class_collectible">Collectible</link> * Field::addCollectible (<link linkend="_class_collectible">Collectible</link> collectible)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_a25e4d60285038520a8420f92570ebd9a_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_field_1adc55f248e3fbe13202b7e1bb13537588"/>    <section>
    <title>getCollectible()</title>
<indexterm><primary>getCollectible</primary><secondary>Field</secondary></indexterm>
<indexterm><primary>Field</primary><secondary>getCollectible</secondary></indexterm>
<para><computeroutput><link linkend="_class_collectible">Collectible</link> * Field::getCollectible (<link linkend="_class_p_vector">PVector</link> pos, double angle, double uncertainty, int color)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_adc55f248e3fbe13202b7e1bb13537588_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_adc55f248e3fbe13202b7e1bb13537588_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_field_1ac726f4dc045fd47ad2de745fe2f898dd"/>    <section>
    <title>getCollectibles()</title>
<indexterm><primary>getCollectibles</primary><secondary>Field</secondary></indexterm>
<indexterm><primary>Field</primary><secondary>getCollectibles</secondary></indexterm>
<para><computeroutput>std::vector&lt; <link linkend="_class_collectible">Collectible</link> &gt; Field::getCollectibles (const std::vector&lt; unsigned int &gt; &amp; colors)</computeroutput></para><para>

<para>Getter method for collectibles. </para>
</para>

<para>Getter for field::collectibles </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_ac726f4dc045fd47ad2de745fe2f898dd_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_field_1a2e1fc59842bf2d0adc078a79f30efe17"/>    <section>
    <title>getDeposits()</title>
<indexterm><primary>getDeposits</primary><secondary>Field</secondary></indexterm>
<indexterm><primary>Field</primary><secondary>getDeposits</secondary></indexterm>
<para><computeroutput>std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; Field::getDeposits ( )</computeroutput></para><para>

<para>Getter method for deposits. </para>
</para>

<para>Getter for field::collectibles </para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_a2e1fc59842bf2d0adc078a79f30efe17_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_field_1a5bcbf3fdf8db5ef596be0a15efdc3892"/>    <section>
    <title>getMapNodes()</title>
<indexterm><primary>getMapNodes</primary><secondary>Field</secondary></indexterm>
<indexterm><primary>Field</primary><secondary>getMapNodes</secondary></indexterm>
<para><computeroutput>std::vector&lt; <link linkend="_class_p_vector">PVector</link> &gt; Field::getMapNodes (const std::vector&lt; unsigned int &gt; &amp; indices)</computeroutput></para>
<para>gets map nodes based on their index</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>indices</entry>
                                <entry>
<para>0 -&gt; walls; 1 -&gt; traps; 2 -&gt; swamps</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>a vector containing all map object areas with the indices </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_a5bcbf3fdf8db5ef596be0a15efdc3892_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_field_1a514b0362f97a072d15cc8b93e53bf529"/>    <section>
    <title>getMapObjects()</title>
<indexterm><primary>getMapObjects</primary><secondary>Field</secondary></indexterm>
<indexterm><primary>Field</primary><secondary>getMapObjects</secondary></indexterm>
<para><computeroutput>std::vector&lt; <link linkend="_class_area">Area</link> &gt; Field::getMapObjects (const std::vector&lt; unsigned int &gt; &amp; indices)</computeroutput></para>
<para>gets map objects based on their index</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>indices</entry>
                                <entry>
<para>the index of the wanted map objects 0 -&gt; walls; 1 -&gt; traps; 2 -&gt; swamps; 3 -&gt; bonus areas;</para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>a vector containing all map object areas with the indices </para>
</formalpara>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_field_a514b0362f97a072d15cc8b93e53bf529_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_class_field_1ac2f890f8e4263dbfd327922065ba0306"/>    <section>
    <title>getSize()</title>
<indexterm><primary>getSize</primary><secondary>Field</secondary></indexterm>
<indexterm><primary>Field</primary><secondary>getSize</secondary></indexterm>
<para><computeroutput><link linkend="_class_p_vector">PVector</link> Field::getSize ( )</computeroutput></para><para>

<para>Getter for the size. </para>
</para>
    </section><anchor xml:id="_class_field_1aaf3139f53330d51b04a58d308b3d449f"/>    <section>
    <title>removeCollectible()</title>
<indexterm><primary>removeCollectible</primary><secondary>Field</secondary></indexterm>
<indexterm><primary>Field</primary><secondary>removeCollectible</secondary></indexterm>
<para><computeroutput>bool Field::removeCollectible (<link linkend="_class_collectible">Collectible</link> collectible)</computeroutput></para></section>
<para>
The documentation for this class was generated from the following files:</para>
code/<link linkend="__map_data_8hpp">MapData.hpp</link>code/<link linkend="__map_data_8cpp">MapData.cpp</link></section>
</section>
