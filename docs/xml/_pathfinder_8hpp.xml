<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_pathfinder_8hpp" kind="file" language="C++">
    <compoundname>Pathfinder.hpp</compoundname>
    <includes refid="_p_p_settings_8hpp" local="yes">libs/PPSettings.hpp</includes>
    <includes refid="_common_functions_8hpp" local="yes">libs/CommonFunctions.hpp</includes>
    <includes refid="_map_data_8hpp" local="yes">MapData.hpp</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">iostream</includes>
    <includes local="no">queue</includes>
    <includes local="no">cmath</includes>
    <includedby refid="main_8cpp" local="yes">code/main.cpp</includedby>
    <includedby refid="_pathfinder_8cpp" local="yes">code/Pathfinder.cpp</includedby>
    <includedby refid="_robot_8hpp" local="yes">code/Robot.hpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>MapData.hpp</label>
        <link refid="_map_data_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>libs/PPSettings.hpp</label>
        <link refid="_p_p_settings_8hpp"/>
      </node>
      <node id="3">
        <label>libs/CommonFunctions.hpp</label>
        <link refid="_common_functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>queue</label>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="7">
        <label>libs/PVector.hpp</label>
        <link refid="_p_vector_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="12">
        <label>utility</label>
      </node>
      <node id="10">
        <label>array</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>code/Pathfinder.hpp</label>
        <link refid="_pathfinder_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>code/SFMLWindow.cpp</label>
        <link refid="_s_f_m_l_window_8cpp"/>
      </node>
      <node id="4">
        <label>code/Robot.hpp</label>
        <link refid="_robot_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>code/SFMLWindow.hpp</label>
        <link refid="_s_f_m_l_window_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>code/Robot.cpp</label>
        <link refid="_robot_8cpp"/>
      </node>
      <node id="2">
        <label>code/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="3">
        <label>code/Pathfinder.cpp</label>
        <link refid="_pathfinder_8cpp"/>
      </node>
      <node id="1">
        <label>code/Pathfinder.hpp</label>
        <link refid="_pathfinder_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_node" prot="public">Node</innerclass>
    <innerclass refid="class_path" prot="public">Path</innerclass>
    <innerclass refid="class_pathfinder" prot="public">Pathfinder</innerclass>
    <innerclass refid="struct_pathfinder_1_1_p_r_i_o_r_i_t_y" prot="private">Pathfinder::PRIORITY</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PATHFINDER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PATHFINDER_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_p_settings_8hpp" kindref="compound">libs/PPSettings.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_common_functions_8hpp" kindref="compound">libs/CommonFunctions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_map_data_8hpp" kindref="compound">MapData.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_node" kindref="compound">Node</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node_1adad2269dc6d7dbd62a4cf8eef7da48fa" kindref="member">Node</ref>(<ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>_pos,<sp/><ref refid="class_field" kindref="compound">Field</ref><sp/>*_field);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="class_node_1a994ffcc71d937a08581e415288ddafdd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_node_1a994ffcc71d937a08581e415288ddafdd" kindref="member">isClosed</ref>,<sp/><ref refid="class_node_1a6b66fb95e8964a388561476467e976ae" kindref="member">isOpen</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_node_1aa78fc6cd04892bc631b80d023ef088c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_node_1af93b606cf10abfe1766617ad9de59b01" kindref="member">g</ref>,<sp/><ref refid="class_node_1aa78fc6cd04892bc631b80d023ef088c4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="class_node_1a17c0c1c22413b76152cd8f513a961022" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>*<ref refid="class_node_1a17c0c1c22413b76152cd8f513a961022" kindref="member">previous</ref>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_node_1ac916db01c0cad26a3e16c29ac68516e8" kindref="member">calculateCost</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>&amp;node);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_node_1a5749804287a44482c4b0b90cb5e70093" kindref="member">canSee</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>&amp;node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/>&amp;ObstaclesStructs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_node_1a4af5b6953c9b717764557d118332f1cb" kindref="member">findNeighbours</ref>(std::vector&lt;Node&gt;<sp/>&amp;Nodes,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/>&amp;ObstacleStructs);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_node_1afd4810249a88e6a0fe802440800daf8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/><ref refid="class_node_1afd4810249a88e6a0fe802440800daf8a" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_node_1abafc6b4a9569e9ee3501e0b0ff9ce16c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_field" kindref="compound">Field</ref><sp/>*<ref refid="class_node_1abafc6b4a9569e9ee3501e0b0ff9ce16c" kindref="member">field</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="class_node_1a91fe55da0158b872e7d16e1121f61ccd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;Node<sp/>*,<sp/>double&gt;&gt;<sp/><ref refid="class_node_1a91fe55da0158b872e7d16e1121f61ccd" kindref="member">neighbours</ref>;<sp/></highlight><highlight class="comment">//<sp/>Node<sp/>/<sp/>cost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_node_1a2a9d028795b134cd1961fc606e194ec9" kindref="member">addNeighbour</ref>(<ref refid="class_node" kindref="compound">Node</ref><sp/>*neighbour,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;cost);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_node_1a69274b9d8270111be533536cde7dffb6" kindref="member">removeNeighbour</ref>(<ref refid="class_node" kindref="compound">Node</ref><sp/>*neighbour);</highlight></codeline>
<codeline lineno="127"><highlight class="normal">};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_path" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_path" kindref="compound">Path</ref><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_path_1ada3c05fb174e6878a59222b9219a113a" kindref="member">Path</ref>(std::vector&lt;PVector&gt;<sp/><ref refid="class_path_1ab102b4db6b6f6c174091676e6269ad72" kindref="member">points</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>_r);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/><ref refid="class_path_1ae1ea4946ec41269898a40ea5d26bc2e3" kindref="member">getClosestNormalPoint</ref>(<ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_path_1af35feac82b7ef6cd57495e5328b8d4aa" kindref="member">isOnPath</ref>(<ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>p);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_path_1a6e051a7405adafa723277cc6d28d6b19" kindref="member">addPoint</ref>(<ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>p);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_path_1a9be76dab519b5ce2416ed86aae3db417" kindref="member">removeLast</ref>();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/><ref refid="class_path_1acb65ffeab6ad10db6c88a22176252a27" kindref="member">getLast</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="class_path_1a623d057c8c795701f9d64b8478047f9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_path_1a623d057c8c795701f9d64b8478047f9a" kindref="member">isEmpty</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_path_1ab102b4db6b6f6c174091676e6269ad72" kindref="member">points</ref>.empty();<sp/>};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="class_path_1ac14f36934a2140da769bfd7d63e2677a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_path_1ac14f36934a2140da769bfd7d63e2677a" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_path_1ab102b4db6b6f6c174091676e6269ad72" kindref="member">points</ref>.size();<sp/>};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_path_1abb16e0278477c1663ea6b9d6df995e0d" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="class_path_1ab102b4db6b6f6c174091676e6269ad72" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="class_path_1ab102b4db6b6f6c174091676e6269ad72" kindref="member">points</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="class_path_1af7f3cd570c15ff5a666d3341aa3969ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_path_1af7f3cd570c15ff5a666d3341aa3969ce" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_pathfinder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_pathfinder" kindref="compound">Pathfinder</ref><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_pathfinder_1a9086888b62eaf4d99362db099075502f" kindref="member">Pathfinder</ref>(<ref refid="class_field" kindref="compound">Field</ref><sp/>&amp;MAP,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trap_sensitive);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_path" kindref="compound">Path</ref><sp/><ref refid="class_pathfinder_1a785a80cd9d469e70c298569e60ff39e1" kindref="member">AStar</ref>(<ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;start,<sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;end);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="class_pathfinder_1a6630073ec1cebccf0f329efc5cd60937" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Node&gt;<sp/><ref refid="class_pathfinder_1a6630073ec1cebccf0f329efc5cd60937" kindref="member">map</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_pathfinder_1afb6e6b06b1774df0ce5d5a47c9784170" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_pathfinder_1afb6e6b06b1774df0ce5d5a47c9784170" kindref="member">trapSensitive</ref>;</highlight></codeline>
<codeline lineno="203" refid="class_pathfinder_1afab5e77b4559053eddae0f5c08608d8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_field" kindref="compound">Field</ref><sp/>*<ref refid="class_pathfinder_1afab5e77b4559053eddae0f5c08608d8a" kindref="member">field</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PRIORITY<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator()(<ref refid="class_node" kindref="compound">Node</ref><sp/>*child,<sp/><ref refid="class_node" kindref="compound">Node</ref><sp/>*parent)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>parent-&gt;<ref refid="class_node_1aa78fc6cd04892bc631b80d023ef088c4" kindref="member">f</ref><sp/>&lt;<sp/>child-&gt;<ref refid="class_node_1aa78fc6cd04892bc631b80d023ef088c4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>heuristic(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;cur,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;end);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_path" kindref="compound">Path</ref><sp/>traverse(<ref refid="class_node" kindref="compound">Node</ref><sp/>*end)<sp/>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">};</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>PATHFINDER_HPP</highlight></codeline>
    </programlisting>
    <location file="code/Pathfinder.hpp"/>
  </compounddef>
</doxygen>
