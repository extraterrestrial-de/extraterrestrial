<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="_map_data_8hpp" kind="file" language="C++">
    <compoundname>MapData.hpp</compoundname>
    <includes refid="_p_p_settings_8hpp" local="yes">libs/PPSettings.hpp</includes>
    <includes refid="_common_functions_8hpp" local="yes">libs/CommonFunctions.hpp</includes>
    <includes refid="_p_vector_8hpp" local="yes">libs/PVector.hpp</includes>
    <includes local="no">vector</includes>
    <includes local="no">iostream</includes>
    <includes local="no">array</includes>
    <includes local="no">cmath</includes>
    <includes local="no">algorithm</includes>
    <includedby refid="main_8cpp" local="yes">code/main.cpp</includedby>
    <includedby refid="_map_data_8cpp" local="yes">code/MapData.cpp</includedby>
    <includedby refid="_pathfinder_8hpp" local="yes">code/Pathfinder.hpp</includedby>
    <includedby refid="_robot_8hpp" local="yes">code/Robot.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>code/MapData.hpp</label>
        <link refid="_map_data_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>libs/PPSettings.hpp</label>
        <link refid="_p_p_settings_8hpp"/>
      </node>
      <node id="3">
        <label>libs/CommonFunctions.hpp</label>
        <link refid="_common_functions_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="6">
        <label>libs/PVector.hpp</label>
        <link refid="_p_vector_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>vector</label>
      </node>
      <node id="9">
        <label>array</label>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>code/MapData.hpp</label>
        <link refid="_map_data_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>code/SFMLWindow.cpp</label>
        <link refid="_s_f_m_l_window_8cpp"/>
      </node>
      <node id="6">
        <label>code/Robot.hpp</label>
        <link refid="_robot_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>code/MapData.cpp</label>
        <link refid="_map_data_8cpp"/>
      </node>
      <node id="8">
        <label>code/SFMLWindow.hpp</label>
        <link refid="_s_f_m_l_window_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>code/Robot.cpp</label>
        <link refid="_robot_8cpp"/>
      </node>
      <node id="2">
        <label>code/main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="5">
        <label>code/Pathfinder.cpp</label>
        <link refid="_pathfinder_8cpp"/>
      </node>
      <node id="4">
        <label>code/Pathfinder.hpp</label>
        <link refid="_pathfinder_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_collectible" prot="public">Collectible</innerclass>
    <innerclass refid="class_line" prot="public">Line</innerclass>
    <innerclass refid="class_area" prot="public">Area</innerclass>
    <innerclass refid="class_field" prot="public">Field</innerclass>
    <innernamespace refid="namespacegeometry">geometry</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_map_data_8hpp_1a5d8d0e0787571afd3a5b4565345b0e76" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_area" kindref="compound">Area</ref> &gt;</type>
        <definition>const std::vector&lt;Area&gt; GAME0WALLS</definition>
        <argsstring></argsstring>
        <name>GAME0WALLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 | | |.<mdash/>.-..--<mdash/>.| \ .<mdash/>.-.| |_ .<mdash/>.-. | || _ || _ || <ndash/> || _ || _|| _ | |__|_|__||___._|| __||_____/ |___._||____||___._| |__| </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="301" column="26" bodyfile="code/MapData.cpp" bodystart="376" bodyend="-1" declfile="code/MapData.hpp" declline="301" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a6a3dbad1ccea8b9cbdca542ce8871b77" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_area" kindref="compound">Area</ref> &gt;</type>
        <definition>const std::vector&lt;Area&gt; GAME0TRAPS</definition>
        <argsstring></argsstring>
        <name>GAME0TRAPS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="302" column="26" bodyfile="code/MapData.cpp" bodystart="394" bodyend="-1" declfile="code/MapData.hpp" declline="302" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a1b9e280f4bd2c5ea162d7d7246878442" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_area" kindref="compound">Area</ref> &gt;</type>
        <definition>const std::vector&lt;Area&gt; GAME0SWAMPS</definition>
        <argsstring></argsstring>
        <name>GAME0SWAMPS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="303" column="26" bodyfile="code/MapData.cpp" bodystart="400" bodyend="-1" declfile="code/MapData.hpp" declline="303" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a6f4c22271cea6cce46e9b0616baed0ba" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_area" kindref="compound">Area</ref> &gt;</type>
        <definition>const std::vector&lt;Area&gt; GAME0WATERS</definition>
        <argsstring></argsstring>
        <name>GAME0WATERS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="304" column="26" bodyfile="code/MapData.cpp" bodystart="402" bodyend="-1" declfile="code/MapData.hpp" declline="304" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a2c5cc712edfb703447cb265cdad14234" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt;</type>
        <definition>const std::vector&lt;PVector&gt; GAME0DEPOSITS</definition>
        <argsstring></argsstring>
        <name>GAME0DEPOSITS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="305" column="26" bodyfile="code/MapData.cpp" bodystart="497" bodyend="-1" declfile="code/MapData.hpp" declline="305" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1ab2c39018be1e4bec6bfb42d1402dab51" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt;</type>
        <definition>const std::vector&lt;PVector&gt; GAME0WALLNODES</definition>
        <argsstring></argsstring>
        <name>GAME0WALLNODES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="307" column="26" bodyfile="code/MapData.cpp" bodystart="502" bodyend="-1" declfile="code/MapData.hpp" declline="307" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a7169e2bfe4b9d6e7ae57826f542451cf" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt;</type>
        <definition>const std::vector&lt;PVector&gt; GAME0TRAPNODES</definition>
        <argsstring></argsstring>
        <name>GAME0TRAPNODES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="308" column="26" bodyfile="code/MapData.cpp" bodystart="519" bodyend="-1" declfile="code/MapData.hpp" declline="308" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a56a8bac10660092139722cc14df2b330" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt;</type>
        <definition>const std::vector&lt;PVector&gt; GAME0SWAMPNODES</definition>
        <argsstring></argsstring>
        <name>GAME0SWAMPNODES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="309" column="26" bodyfile="code/MapData.cpp" bodystart="524" bodyend="-1" declfile="code/MapData.hpp" declline="309" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a105100c9ca31bdcc7c0f2e93142a5347" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_collectible" kindref="compound">Collectible</ref> &gt;</type>
        <definition>const std::vector&lt;Collectible&gt; GAME0COLLECTIBLES</definition>
        <argsstring></argsstring>
        <name>GAME0COLLECTIBLES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="311" column="26" bodyfile="code/MapData.cpp" bodystart="530" bodyend="-1" declfile="code/MapData.hpp" declline="311" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a6543ba543a4879004aeeab9f65b9c79d" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_area" kindref="compound">Area</ref> &gt;</type>
        <definition>const std::vector&lt;Area&gt; GAME1WALLS</definition>
        <argsstring></argsstring>
        <name>GAME1WALLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="313" column="26" bodyfile="code/MapData.cpp" bodystart="619" bodyend="-1" declfile="code/MapData.hpp" declline="313" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1ad1b90b6a79493cda3d491c4af38e4611" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_area" kindref="compound">Area</ref> &gt;</type>
        <definition>const std::vector&lt;Area&gt; GAME1TRAPS</definition>
        <argsstring></argsstring>
        <name>GAME1TRAPS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="314" column="26" bodyfile="code/MapData.cpp" bodystart="621" bodyend="-1" declfile="code/MapData.hpp" declline="314" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1ae2f59fba0917213b2b5ed5be14065108" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_area" kindref="compound">Area</ref> &gt;</type>
        <definition>const std::vector&lt;Area&gt; GAME1SWAMPS</definition>
        <argsstring></argsstring>
        <name>GAME1SWAMPS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="315" column="26" bodyfile="code/MapData.cpp" bodystart="657" bodyend="-1" declfile="code/MapData.hpp" declline="315" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a89322b6b39784781f3ef34b2c6442dd1" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_area" kindref="compound">Area</ref> &gt;</type>
        <definition>const std::vector&lt;Area&gt; GAME1WATERS</definition>
        <argsstring></argsstring>
        <name>GAME1WATERS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="316" column="26" bodyfile="code/MapData.cpp" bodystart="898" bodyend="-1" declfile="code/MapData.hpp" declline="316" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a858dcfbef08a4532d85e54c6f6ee0d79" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt;</type>
        <definition>const std::vector&lt;PVector&gt; GAME1DEPOSITS</definition>
        <argsstring></argsstring>
        <name>GAME1DEPOSITS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="317" column="26" bodyfile="code/MapData.cpp" bodystart="1090" bodyend="-1" declfile="code/MapData.hpp" declline="317" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a80292519a7785cb8b0f36c78942077a8" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt;</type>
        <definition>const std::vector&lt;PVector&gt; GAME1WALLNODES</definition>
        <argsstring></argsstring>
        <name>GAME1WALLNODES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="319" column="26" bodyfile="code/MapData.cpp" bodystart="1095" bodyend="-1" declfile="code/MapData.hpp" declline="319" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1aba3b95231805b4634b1bb3f701f1b4ce" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt;</type>
        <definition>const std::vector&lt;PVector&gt; GAME1TRAPNODES</definition>
        <argsstring></argsstring>
        <name>GAME1TRAPNODES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="320" column="26" bodyfile="code/MapData.cpp" bodystart="1097" bodyend="-1" declfile="code/MapData.hpp" declline="320" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a78ca48d700499994f263167950d526a7" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt;</type>
        <definition>const std::vector&lt;PVector&gt; GAME1SWAMPNODES</definition>
        <argsstring></argsstring>
        <name>GAME1SWAMPNODES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="321" column="26" bodyfile="code/MapData.cpp" bodystart="1132" bodyend="-1" declfile="code/MapData.hpp" declline="321" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_map_data_8hpp_1a4508f5e07fb31ba5a1d5865b9a43de36" prot="public" static="no" mutable="no">
        <type>const std::vector&lt; <ref refid="class_collectible" kindref="compound">Collectible</ref> &gt;</type>
        <definition>const std::vector&lt;Collectible&gt; GAME1COLLECTIBLES</definition>
        <argsstring></argsstring>
        <name>GAME1COLLECTIBLES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="323" column="26" bodyfile="code/MapData.cpp" bodystart="1376" bodyend="-1" declfile="code/MapData.hpp" declline="323" declcolumn="26"/>
        <referencedby refid="_co_space_functions_8hpp_1a769404f2985a027a0d626fedfd4de1e9" compoundref="main_8cpp" startline="36" endline="60">Setup</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MAPDATA_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAPDATA_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_p_settings_8hpp" kindref="compound">libs/PPSettings.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_common_functions_8hpp" kindref="compound">libs/CommonFunctions.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_p_vector_8hpp" kindref="compound">libs/PVector.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_collectible" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_collectible" kindref="compound">Collectible</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_collectible_1aadc689e6d7e13d4355da7ec3404105b9" kindref="member">Collectible</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>worthDouble);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collectible_1a068a4938bf6bb68cf6e7b1fd33dd1f4c" kindref="member">isCorrectCollectible</ref>(<ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>robotPos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>uncertainty)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="class_collectible_1ad146cff6f283cb1aadcae32cb9809181" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_collectible_1ad146cff6f283cb1aadcae32cb9809181" kindref="member">state</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="class_collectible_1a4b05ee3fb93c337fe7e96f9f27cced8c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_collectible_1a4b05ee3fb93c337fe7e96f9f27cced8c" kindref="member">visited</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_collectible_1a9db7f5679bc72eeb0202f2d1d524d543" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_collectible_1a9db7f5679bc72eeb0202f2d1d524d543" kindref="member">color</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="class_collectible_1a35548d744bfc32a213a82769ef226d31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collectible_1a35548d744bfc32a213a82769ef226d31" kindref="member">isWorthDouble</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_collectible_1af2442e4febf0a7c610b5314b6c81641b" kindref="member">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_collectible" kindref="compound">Collectible</ref><sp/>&amp;lhs)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_collectible_1a8e02c21c99236a193670926c1f7cd1a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/><ref refid="class_collectible_1a8e02c21c99236a193670926c1f7cd1a9" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="class_line" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_line" kindref="compound">Line</ref><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_line_1acbdd5208bed57bca25c0db540d68dc4d" kindref="member">Line</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;_p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;_p2);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_line_1a83967c5447d139815c8be5de33fdc39e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/><ref refid="class_line_1a83967c5447d139815c8be5de33fdc39e" kindref="member">p1</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_line_1a113f0f7413651d7eb0b4602d1da226d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/><ref refid="class_line_1a113f0f7413651d7eb0b4602d1da226d4" kindref="member">p2</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_line_1a85685f9a0e23d1ff9d03d6e32313aaeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="class_line_1a85685f9a0e23d1ff9d03d6e32313aaeb" kindref="member">str</ref>(<ref refid="class_line" kindref="compound">Line</ref><sp/>&amp;l)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;from<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_p_vector_1adb8ed86f463adce2d0b86d1ad8c45592" kindref="member">PVector::str</ref>(l.<ref refid="class_line_1a83967c5447d139815c8be5de33fdc39e" kindref="member">p1</ref>)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;to<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/><ref refid="class_p_vector_1adb8ed86f463adce2d0b86d1ad8c45592" kindref="member">PVector::str</ref>(l.<ref refid="class_line_1a113f0f7413651d7eb0b4602d1da226d4" kindref="member">p2</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal">};</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_area" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_area" kindref="compound">Area</ref><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_area_1a994f252a46e2b763877db5ad1e7f1cb4" kindref="member">Area</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/>&amp;p_s);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/>&amp;<ref refid="class_area_1a8f62e3ceb16049e775a5d62726b2da8d" kindref="member">getCorners</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Line&gt;<sp/>&amp;<ref refid="class_area_1a00a98f4e74b241a5c69bc07a516b5fc4" kindref="member">getEdges</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;<ref refid="class_area_1a4e5300b4f16f60b67e715b6934eeaa64" kindref="member">getMin</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;<ref refid="class_area_1a92da3c6a92d0233d090a6ae07a048232" kindref="member">getMax</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PVector&gt;<sp/>Corners_;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Line&gt;<sp/>Edges_;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>min_;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>max_;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">};</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_field" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_field" kindref="compound">Field</ref><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_field_1a67b9e78358f9db7499bfdd5ef2871101" kindref="member">Field</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;height,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/>&amp;walls,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/>&amp;traps,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/>&amp;swamps,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/>&amp;waters,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/>&amp;deposits,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/>&amp;wallNodes,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/>&amp;trapNodes,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/>&amp;swampNodes,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Collectible&gt;<sp/>&amp;collectibles);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_collectible" kindref="compound">Collectible</ref>*<sp/><ref refid="class_field_1a25e4d60285038520a8420f92570ebd9a" kindref="member">addCollectible</ref>(<ref refid="class_collectible" kindref="compound">Collectible</ref><sp/>collectible);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_field_1aaf3139f53330d51b04a58d308b3d449f" kindref="member">removeCollectible</ref>(<ref refid="class_collectible" kindref="compound">Collectible</ref><sp/>collectible);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_collectible" kindref="compound">Collectible</ref><sp/>*<ref refid="class_field_1adc55f248e3fbe13202b7e1bb13537588" kindref="member">getCollectible</ref>(<ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>pos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>uncertainty,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>color);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/><ref refid="class_field_1ac2f890f8e4263dbfd327922065ba0306" kindref="member">getSize</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Area&gt;<sp/><ref refid="class_field_1a514b0362f97a072d15cc8b93e53bf529" kindref="member">getMapObjects</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>&amp;indices);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="class_field_1a5bcbf3fdf8db5ef596be0a15efdc3892" kindref="member">getMapNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>&amp;indices);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="class_field_1a2e1fc59842bf2d0adc078a79f30efe17" kindref="member">getDeposits</ref>();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Collectible&gt;<sp/><ref refid="class_field_1ac726f4dc045fd47ad2de745fe2f898dd" kindref="member">getCollectibles</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;unsigned<sp/>int&gt;<sp/>&amp;colors);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Area&gt;<sp/>Walls_;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Area&gt;<sp/>Traps_;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Area&gt;<sp/>Swamps_;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Area&gt;<sp/>Waters_;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PVector&gt;<sp/>Deposits_;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PVector&gt;<sp/>WallNodes_;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PVector&gt;<sp/>TrapNodes_;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;PVector&gt;<sp/>SwampNodes_;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;std::vector&lt;Collectible&gt;,<sp/>4&gt;<sp/>Collectibles_;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>size_;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">};</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="namespacegeometry" refkind="compound"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacegeometry" kindref="compound">geometry</ref><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacegeometry_1af87847d485624e5c7ab2bb1558c3a36f" kindref="member">isLeft</ref>(<ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>p0,<sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>p1,<sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>p2);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacegeometry_1aebf0ad8e6b1a14089df1845e5173a811" kindref="member">isInside</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;p,<sp/><ref refid="class_area" kindref="compound">Area</ref><sp/>&amp;area);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/><ref refid="namespacegeometry_1a228137d265482ee3fd6581e2e375eb8f" kindref="member">intersection</ref>(<ref refid="class_line" kindref="compound">Line</ref><sp/>&amp;l1,<sp/><ref refid="class_line" kindref="compound">Line</ref><sp/>&amp;l2);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacegeometry_1ab3ebb42fdbd44fb848c370a0b4261e18" kindref="member">isIntersecting</ref>(<ref refid="class_line" kindref="compound">Line</ref><sp/>&amp;l1,<sp/><ref refid="class_line" kindref="compound">Line</ref><sp/>&amp;l2);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacegeometry_1ab3ebb42fdbd44fb848c370a0b4261e18" kindref="member">isIntersecting</ref>(<ref refid="class_line" kindref="compound">Line</ref><sp/>l1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;&amp;<sp/>Obstacles);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacegeometry_1a478ae992edb02bc432e6d0420c40e336" kindref="member">sqDist</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;p2);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacegeometry_1a9a1ebcb6a74b046020dcc91c40554a3a" kindref="member">dist</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;p1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>&amp;p2);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacegeometry_1a2710bf6fad3b638a4ee95abcd843d90f" kindref="member">dot</ref>(<ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>p1,<sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>p2);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/><ref refid="namespacegeometry_1a120ad790ee5a9ef199a6d67e5e9f1c90" kindref="member">getNormalPoint</ref>(<ref refid="class_line" kindref="compound">Line</ref><sp/>line,<sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>point);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_p_vector" kindref="compound">PVector</ref><sp/><ref refid="namespacegeometry_1a46dee6450badd387e6788a9ebf80fa44" kindref="member">angle2Vector</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacegeometry_1a0ce1748996f9e029a3cbeb665c1d17ce" kindref="member">vector2Angle</ref>(<ref refid="class_p_vector" kindref="compound">PVector</ref><sp/>v);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacegeometry_1a0ce1748996f9e029a3cbeb665c1d17ce" kindref="member">vector2Angle</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/><ref refid="_map_data_8hpp_1a5d8d0e0787571afd3a5b4565345b0e76" kindref="member">GAME0WALLS</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/><ref refid="_map_data_8hpp_1a6a3dbad1ccea8b9cbdca542ce8871b77" kindref="member">GAME0TRAPS</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/><ref refid="_map_data_8hpp_1a1b9e280f4bd2c5ea162d7d7246878442" kindref="member">GAME0SWAMPS</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/><ref refid="_map_data_8hpp_1a6f4c22271cea6cce46e9b0616baed0ba" kindref="member">GAME0WATERS</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="_map_data_8hpp_1a2c5cc712edfb703447cb265cdad14234" kindref="member">GAME0DEPOSITS</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="_map_data_8hpp_1ab2c39018be1e4bec6bfb42d1402dab51" kindref="member">GAME0WALLNODES</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="_map_data_8hpp_1a7169e2bfe4b9d6e7ae57826f542451cf" kindref="member">GAME0TRAPNODES</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="_map_data_8hpp_1a56a8bac10660092139722cc14df2b330" kindref="member">GAME0SWAMPNODES</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Collectible&gt;<sp/><ref refid="_map_data_8hpp_1a105100c9ca31bdcc7c0f2e93142a5347" kindref="member">GAME0COLLECTIBLES</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/><ref refid="_map_data_8hpp_1a6543ba543a4879004aeeab9f65b9c79d" kindref="member">GAME1WALLS</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/><ref refid="_map_data_8hpp_1ad1b90b6a79493cda3d491c4af38e4611" kindref="member">GAME1TRAPS</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/><ref refid="_map_data_8hpp_1ae2f59fba0917213b2b5ed5be14065108" kindref="member">GAME1SWAMPS</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Area&gt;<sp/><ref refid="_map_data_8hpp_1a89322b6b39784781f3ef34b2c6442dd1" kindref="member">GAME1WATERS</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="_map_data_8hpp_1a858dcfbef08a4532d85e54c6f6ee0d79" kindref="member">GAME1DEPOSITS</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="_map_data_8hpp_1a80292519a7785cb8b0f36c78942077a8" kindref="member">GAME1WALLNODES</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="_map_data_8hpp_1aba3b95231805b4634b1bb3f701f1b4ce" kindref="member">GAME1TRAPNODES</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;PVector&gt;<sp/><ref refid="_map_data_8hpp_1a78ca48d700499994f263167950d526a7" kindref="member">GAME1SWAMPNODES</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Collectible&gt;<sp/><ref refid="_map_data_8hpp_1a4508f5e07fb31ba5a1d5865b9a43de36" kindref="member">GAME1COLLECTIBLES</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!MAPDATA_HPP</highlight></codeline>
    </programlisting>
    <location file="code/MapData.hpp"/>
  </compounddef>
</doxygen>
