<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_area" kind="class" language="C++" prot="public">
    <compoundname>Area</compoundname>
    <includes refid="_map_data_8hpp" local="no">MapData.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_area_1a99c2396e41b3a7d656ab5b1cbd84b7ec" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt;</type>
        <definition>std::vector&lt;PVector&gt; Area::Corners_</definition>
        <argsstring></argsstring>
        <name>Corners_</name>
        <briefdescription>
<para>Holds all corners of the <ref refid="class_area" kindref="compound">Area</ref> as ordered points. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="137" column="17" bodyfile="code/MapData.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_area_1a95f2340e3dc50253b9dda84ab8efc514" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_line" kindref="compound">Line</ref> &gt;</type>
        <definition>std::vector&lt;Line&gt; Area::Edges_</definition>
        <argsstring></argsstring>
        <name>Edges_</name>
        <briefdescription>
<para>Holds all edges of the <ref refid="class_area" kindref="compound">Area</ref> as ordered lines. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="140" column="17" bodyfile="code/MapData.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_area_1a0d9e4b5377d7f8d8e21953bda1efee84" prot="private" static="no" mutable="no">
        <type><ref refid="class_p_vector" kindref="compound">PVector</ref></type>
        <definition>PVector Area::min_</definition>
        <argsstring></argsstring>
        <name>min_</name>
        <briefdescription>
<para>Lowest posX and posY coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="143" column="13" bodyfile="code/MapData.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_area_1a30de6fb964dc82329f90f4176e7ce0ed" prot="private" static="no" mutable="no">
        <type><ref refid="class_p_vector" kindref="compound">PVector</ref></type>
        <definition>PVector Area::max_</definition>
        <argsstring></argsstring>
        <name>max_</name>
        <briefdescription>
<para>Highest posX and posY coordinates. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="146" column="13" bodyfile="code/MapData.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_area_1a994f252a46e2b763877db5ad1e7f1cb4" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>Area::Area</definition>
        <argsstring>(const std::vector&lt; PVector &gt; &amp;p_s)</argsstring>
        <name>Area</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt; &amp;</type>
          <declname>p_s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><hruler/>
 <ref refid="class_area" kindref="compound">Area</ref> <linebreak/>
 <hruler/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="120" column="14" bodyfile="code/MapData.cpp" bodystart="47" bodyend="70"/>
        <references refid="class_p_vector_1ae8f2976bebde7c888ce91e84ae082b65" compoundref="_p_vector_8hpp" startline="25">PVector::x</references>
        <references refid="class_p_vector_1a8dab9e24be65753f9b261e6329df500a" compoundref="_p_vector_8hpp" startline="30">PVector::y</references>
      </memberdef>
      <memberdef kind="function" id="class_area_1a8f62e3ceb16049e775a5d62726b2da8d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_p_vector" kindref="compound">PVector</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; PVector &gt; &amp; Area::getCorners</definition>
        <argsstring>() const</argsstring>
        <name>getCorners</name>
        <briefdescription>
<para>Getter method for Area::Corners_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="123" column="23" bodyfile="code/MapData.cpp" bodystart="72" bodyend="74"/>
        <referencedby refid="namespacegeometry_1aebf0ad8e6b1a14089df1845e5173a811" compoundref="_map_data_8cpp" startline="255" endline="280">geometry::isInside</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_area_1a00a98f4e74b241a5c69bc07a516b5fc4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="class_line" kindref="compound">Line</ref> &gt; &amp;</type>
        <definition>const std::vector&lt; Line &gt; &amp; Area::getEdges</definition>
        <argsstring>() const</argsstring>
        <name>getEdges</name>
        <briefdescription>
<para>Getter method for Area::Edges_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="126" column="23" bodyfile="code/MapData.cpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_area_1a4e5300b4f16f60b67e715b6934eeaa64" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_p_vector" kindref="compound">PVector</ref> &amp;</type>
        <definition>const PVector &amp; Area::getMin</definition>
        <argsstring>() const</argsstring>
        <name>getMin</name>
        <briefdescription>
<para>Getter method for Area::min_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="129" column="19" bodyfile="code/MapData.cpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_area_1a92da3c6a92d0233d090a6ae07a048232" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="class_p_vector" kindref="compound">PVector</ref> &amp;</type>
        <definition>const PVector &amp; Area::getMax</definition>
        <argsstring>() const</argsstring>
        <name>getMax</name>
        <briefdescription>
<para>Getter method for Area::max_. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/MapData.hpp" line="132" column="19" bodyfile="code/MapData.cpp" bodystart="84" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A polygon in a 2D grid</para>
<para>The area is defined by a collection of points (also known as polygons). The points have to be stored in a specific order to prevent mistakes. The edge a is defined by line(p_s[i], p_s[i+1]) with the only exception being the last element of p that is connected with the first one</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>p_s</parametername>
</parameternamelist>
<parameterdescription>
<para>The Corners of the <ref refid="class_area" kindref="compound">Area</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="code/MapData.hpp" line="117" column="1" bodyfile="code/MapData.hpp" bodystart="117" bodyend="147"/>
    <listofallmembers>
      <member refid="class_area_1a994f252a46e2b763877db5ad1e7f1cb4" prot="public" virt="non-virtual"><scope>Area</scope><name>Area</name></member>
      <member refid="class_area_1a99c2396e41b3a7d656ab5b1cbd84b7ec" prot="private" virt="non-virtual"><scope>Area</scope><name>Corners_</name></member>
      <member refid="class_area_1a95f2340e3dc50253b9dda84ab8efc514" prot="private" virt="non-virtual"><scope>Area</scope><name>Edges_</name></member>
      <member refid="class_area_1a8f62e3ceb16049e775a5d62726b2da8d" prot="public" virt="non-virtual"><scope>Area</scope><name>getCorners</name></member>
      <member refid="class_area_1a00a98f4e74b241a5c69bc07a516b5fc4" prot="public" virt="non-virtual"><scope>Area</scope><name>getEdges</name></member>
      <member refid="class_area_1a92da3c6a92d0233d090a6ae07a048232" prot="public" virt="non-virtual"><scope>Area</scope><name>getMax</name></member>
      <member refid="class_area_1a4e5300b4f16f60b67e715b6934eeaa64" prot="public" virt="non-virtual"><scope>Area</scope><name>getMin</name></member>
      <member refid="class_area_1a30de6fb964dc82329f90f4176e7ce0ed" prot="private" virt="non-virtual"><scope>Area</scope><name>max_</name></member>
      <member refid="class_area_1a0d9e4b5377d7f8d8e21953bda1efee84" prot="private" virt="non-virtual"><scope>Area</scope><name>min_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
